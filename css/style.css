@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Sour+Gummy:ital,wght@0,100..900;1,100..900&display=swap');
/*wczytanie zewnętrznej czcionki pochodzącej z Google Fonts*/
:root{
    --header-height:100px;
    --bg-black:black;
}
/*W sekcji root można zdefiniować zmienne, które będą wielokrotnie wykorzystywane w naszym projekcie. Na początek podajemy nazwę zmiennej (jakąkolwiek, bez polskich znaków, spacje zastępując myślinikami) poprzedzoną dwoma myślnikami, a następnie jej wartość. W miejscu, w którym będziemy ją wykorzystywać wstawiamy w miejsce konkretnej wartości odwołanie do zmiennej - var(--nazwa-zmiennej)*/
*{
    margin:0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
    scroll-behavior: smooth;
    -webkit-scroll-behavior:smooth;
    /*powoduje dodanie płynnego przewijania strony po kliknięciu linku z menu. przedostek -webkit dla przeglądarek chrome i safari*/
}
header{
    height:var(--header-height);/*w tym miejscu odwołujemy się do zmiennej zdefiniowanej w grupie root*/
    background:#ccc;
    display: flex;/*wyświetla cały nagłówek jako flex, domyślnie wyświetla się on jako wiersz*/
    position: sticky;/*powoduje przyklejenie elementu*/
    top:0;/*i przykleja go do górnej krawędzi okna przeglądarki*/
    z-index:999999;/*umieszcza element na warstwie o podanym numerze (pozorne umieszczenie na osi z - głębokość ekranu. Użycie dużej wartości powoduje, że będzie on zawsze na górze*/
    align-items: center;
}
header .logo{
    flex:2;
    display: flex;
    justify-content: center;
    align-items: center;
}
header .logo img{
    height: 70px;
    width:auto;
    filter: drop-shadow(3px 3px 3px rgba(0, 0, 0,0.5)) ;
}
header .menu{
    flex:6;/*użycie wartości 6 powoduje, że element ten będzie 6 razy szerszy niż bazowy, ustawiony dla header .tryb i .socialki*/
    display: flex;
    justify-content: center;
    align-items: center;
}
header .menu ul{
    list-style-type: none;
    display: flex;
    justify-content: space-around;
    width: 100%;
    height: 100%;
}
header .menu ul li, header .menu ul a{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
}
header .menu ul a{
    color:black;
    text-decoration: none;
    text-transform: uppercase;/*zmienia cały tekst na duże litery*/
    font-size: 1.25rem;/*użycie jednostki rem powoduje, że czcionka będzie się odnosiła do czcionki bazowej dla systemu. Jeżeli używana była by skala em, wówczas odniesienie było by do poprzednio użytej wielkości czcionki. czyli jeżeli wcześniej zadeklarowalibyśmy jakiemuś elementowi font-size na 5em, a następnie temu na 3em, to docelowo czcionka by była najpierw powiększona x5, a potem jeszcze x3*/
    transition: 0.7s;/*czas trwania zmian dla parametrów, które będą po najechaniu posiadały inne wartości. Transition zawsze wstawia się w elemencie o stanie bazowym*/
}
header .menu ul a:hover{
    background: red;
    color:white;
}
header .tryb{
    flex:1;/*parametr ten oznacza, że flex będzie jakiejś szerokości. Wartość 1 ustawia parametr bazowy dla szerokości*/
    display: flex;
    justify-content: center;
    align-items: center;
    gap:10px;/*ustawia odstęp pomiędzy kolejnymi elementami flexa*/
    font-size:1.25rem;
}
header .socialki{
    flex:1;
    display: flex;
    justify-content: center;
    align-items: center;
    gap:10px;
    font-size:1.25rem;
}
header .socialki a{
    color:#000;
    transition: 0.7s;
}
header .socialki a:hover .fa-square-facebook{
    color:blue;
}
header .socialki a:hover .fa-square-youtube{
    color:red;
}
.baner{
    background: url(../img/tlo1-1.jpg); /*podana ścieżka do pliku uwzględnia, że plik css, w którym znajduje się definicja tła znajduje się w innym folderze, niż follder główny. Jeżeli użyjemy linku img/1.jpg wówczas folder img będzie szukany wewnątrz folderu css. Użycie ../ powoduje przejście katalog wyżej*/
    justify-content: flex-end !important;
    background-repeat: no-repeat;
    /*usuwa powtarzanie tła, ktore domyślnie jest ustawione na powtarzanie poziomo i pionowo*/
    background-position: center;
     /*wyśrodkowuje obrazek tła. pozycja ma dwa parametry - poziomy i pionowy - i pozwala ustawić punkt zaczepienia tła w bloku, w którym obraz tła występuje. Bazowo jest to górny prawy róg. Punktami odniesienia są wszystkie rogi obrazu, połowy boków oraz środek*/
    background-size: cover;
    /*powoduje rozciągniecie obrazu do dłuższego z boków bloku, wewnątrz którego tło się znajduje*/
}
.baner .box{
    width:300px;
    min-height:400px;
    background: rgba(0, 0, 0,0.5);
    /*dodatkowy parametr a w kolorze odpowiada za przezroczystość tła. wartości od 0 do 1 odpowiadają 0% do 100%*/
    color:#fff;
    padding:20px;
    display: flex;
    flex-direction: column;/*obraca kierunek flexa z wiersza na kolumnę*/
    align-items: center;
    justify-content: space-between;
    /*w związku z obróceniem kierunku flexa na pionowy w flex-direction justify-content działa dalej zgodnie z kierunkiem flexa, a on teraz nie jest poziomy, tylko pionowy*/
    text-align: center;
    margin-right:5%;
    gap:10px;
    /*opacity: 0.5;*/
}
.baner .box .h1{
    font-size:1.5rem;
}
.baner .box a{
    text-decoration: none;
    color:#fff;
    border:1px solid #fff;
    padding:8px 20px;
    width:100%;
    transition: 0.7s;
}
.baner .box a:hover{
    color:#000;
    background: #fff;
}
.opis .obraz{
    flex:1;
    display: flex;
    justify-content: center;
    align-items: center;
}
.opis .obraz img{
    width:250px;
    height:250px;
    border-radius: 50%;/*powoduje ustawienie zaokrągleń obramowania na 50% długości boku, co powoduje powstanie koła. Warunek - obiekt powinien być kwadratem*/
    border: 1px dashed #ccc;
    background: #fff;
    box-shadow: 0 0 20px rgba(0, 0, 0,0.75);/*cień rzucany pod obiektem. Pierwszy z parametrów to przesunięcie poziome, drugi - pionowe, trzeci odległość na jaką pada cień, no i kolor cienia*/
    padding:8px;
    transition: 0.7s;
}
.opis .obraz img:hover{
    border-radius:50% 25px;
}
.opis .tekst{
    flex:2;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap:30px;
    padding:20px;
}
.opis .tekst h1{
    font-weight: 200;
    display: flex;
    align-items: center;
}
/*subklasy before i after pozwalają na umieszczenie dodatkowych elementów przed i za elementem, do którego są przypisane*/
.opis .tekst h1:before{
    content: '';/*pozwala na umieszczenie jakiejś zawartości z poziomu css. W tym przypadku - pozostawiony pusty - jest wykorzystany do wyświetlenia jakiegoś elementu graficznego*/
    width:40px;/*o takiej szerokości*/
    height:5px;/*o takiej wysokości*/
    background:#c00;/*oraz takim tle. Aby ten element się wyświetlił musimy zmienić elementowi wyżej display na flex albo block*/
    margin-right:15px;
}
.opis .tekst h1:after{
    content: '';
    width:40px;
    height:5px;
    background:#000;
    margin-left:15px;
}
.opis .tekst p{
    column-count: 3;/*podział tekstu na trzy kolumny przez przegladarkę*/
    column-gap: 40px;
    column-rule: 2px solid #c00;/*linia oddzielająca kolumny tekstu*/
}
.czerwony{
    color:#c00;
}
.paralaxa {
    background: url(../img/tlo2-1.jpg);
    justify-content: flex-start !important;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    /*powoduje pokrycie obrazem obszaru całego diva, w którym ten obraz będzie umieszczony jako tło*/
    background-attachment: fixed;/*powoduje przyklejenie obrazu tła do okna przeglądarki*/
}
.paralaxa .box{
    width:300px;
    min-height:400px;
    background: rgba(0, 0, 0,0.5);
    color:#fff;
    padding:20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    text-align: center;
    margin-left:5%;
    gap:10px;
}
.paralaxa .box .h1{
    font-size:1.5rem;
}
.paralaxa .box a{
    text-decoration: none;
    color:#fff;
    border:1px solid #fff;
    padding:8px 20px;
    width:100%;
    transition: 0.7s;
}
.paralaxa .box a:hover{
    color:#000;
    background: #fff;
}
.panele {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    padding:20px;
}
.panele .panel{
    height: 350px;
    width: 280px;
    flex:1;
    border: 1px solid #222;
}
.panele .paski{
    display: flex;
    justify-content: center;
    position: relative;/*powoduje ustalenie tego diva jak nadrzędnego dla wszystkich elementów posiadających position:absolute znajdujących się wewnątrz elementu. W przypadku braku tego relative za bazowy element uznawane jest całe okno przeglądarki*/
    background: linear-gradient(45deg, #69f 25%, #444 25%, #444 50%, #69f 50%, #69f 75%, #444 75%, #444 100%);/*tło jako gradient liniowy. W pierszym parametrze podajemy kąt, pod jakim gradient będzie rozmieszczony w elemencie. W kolejnych krokach podajemy jakie kolory i w których miejscach obszaru będą występowały. Podanie tych samych wartości procentowych dla kolorów granicznych powoduje, że przeglądarka nie tworzy płynnego przejścia pomiędzy tymi kolorami, tylko odcina pierwszy w kolorów, zastępując go drugim*/
    background-size: 40px 40px;/*ustawienie wielkości tła. W związku z domyślną wartością dla powtarzania tła będzie się ono powtarzało poziomo i pionowo, aż do wypełnienia obszaru, w którym się znajduje*/
    animation: animacjaTla 0.7s linear infinite;/*dodanie animacji. Pierwszy parametr to nazwa animacji, która musi być unikalna (bowiem animacji możemy mieć nieskończenie wiele). Nazwa nie powinna posiadać polskich znaków ani spacji. Drugi parametr to czas trwania animacji. Kolejny to jej przyrost - linear oznacza, że animacja coraz bardziej przyspiesza od jej początku do jej końca. Ostatni element to nieskończona ilość odtworzeń animacji, czyli jej zapętlenie*/
    animation-play-state: paused;/*Początkowo animacja jest zatrzymana*/
    filter: grayscale(1);/*dodaje filtr w postaci wyświetlania wszystkich elementów wewnątrz jako czarno-białe*/
}
.panele .paski:hover{
    animation-play-state: running;/*po najechaniu na element z klasą .paski animacja rozpoczyna się*/
    filter: grayscale(0);/*po najechaniu na element z klasą .paski usuwane jest wyświetlanie w trybie czarno-białym*/
}
@keyframes animacjaTla{/*ustawienie klatek kluczowych dla animacji o nazwie wpisanej po keyframes*/
    0%{/*początek animacji - pierwsza klatka*/
        background-position: 0;/*tło pozostaje w stanie początkowym*/
    }
    100%{/*koniec animacji - ostatnia klatka*/
        background-position: 40px;/*tło przesuwa się o jego pełny rozmiar zdefiniowany w background-size*/
    }/*pomiędzy pierwszą a ostatnią klatką przeglądarka wstawia sobie poszczególne wartości proporcjonalnie*/
}
.panele .paski:nth-child(2){/*dodaje warunek dla drugiego elementu dziecka znajdującego się w klasie .paski*/
    background: linear-gradient(-45deg, #ff61ae 25%, #444 25%, #444 50%, #ff61ae 50%, #ff61ae 75%, #444 75%, #444 100%);
    background-size: 40px 40px;
}
.panele .paski img{
    position: absolute;/*pozycja elementu liczona jest względem pierwszego napotkanego wyżej w obrębie struktury elementu, posiadającego przypisany parametr position:relative. Jeśli żaden nie ma go ustawionego, wówczas element jest pozycjonowany względem całego okna przeglądarki*/
    bottom: 0;/*element jest przyciągany do dolnej krawędzi diva, w którym się znajduje*/
    height: 90%;/*i jego wysokość ma mieć 90% wysokości diva, w którym się znajduje*/
    transition: 0.7s;
}
.panele .paski:hover img{
    height: 110%;
}
.panele .paski p{
    font-size: 3rem;
    color: #fff;
    background: rgba(0, 0, 0,0.5);
    text-align: center;
    position: absolute;
    bottom: 5%;
    width: 90%;
    transform: scale(0);/*scale 0 powoduje zmniejszenie elementu do 0%, czyli jego zniknięcie*/
    transition: 0.7s ease-in-out;/*ease-in-out powoduje, że animacja wykonuje się z łagodnym rozpoczęciem, potem przyspiesza i pod koniec zwalnia z łagodnym zakończeniem*/
}
.panele .paski:hover p{
    transform: scale(1);/*po najechaniu element wyświetlany jest w swojej pierwotnej wielkości*/
}
.panele .panel .scan{
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 20px;
    position: relative;
}
.panele .panel .scan .odcisk{
    position: relative;
    width: 250px;
    height: 250px;
    background: url(../img/fp_1.png);
    background-size: 250px;
}
.panele .panel .scan .odcisk:before{/*nałożenie drugiego obrazu na pierwszy*/
    content: '';
    position: absolute;
    top:0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url(../img/fp_2.png);
    background-size: 250px;
    animation: fprint 4s linear infinite;
}
@keyframes fprint{/*animacja posiada trzy klatki kluczowe. Jej początek i koniec znajdują się w tym samym punkcie (na górze), a środek animacji to dół bloku. Animacja ta jest działaniem na wysokości drugiego tła zadeklarowanego za pomocą before*/
    0%, 100%{
        height: 0%;
    }
    50%{
        height: 100%;
    }
}
.panele .panel .scan .odcisk:after{/*Drugą subklasą wstawiana jest linia symulująca działanie skanera*/
    content: '';
    position: absolute;
    top:0;
    left: 0;
    width: 100%;
    height: 8px;
    background: #69f;
    filter: drop-shadow(0 0 20px #69f) drop-shadow(0 0 60px #69f);/*rzucanie cienia wokół elementu. Parametry to przesunięcie w poziomie, pionie, odległość oraz kolor cienia. Podwójne użycie powoduje z różną odległością cienia powoduje, że na pierszych 20px cień ten jest nałożony podwójnie, przez co jest on lepiej widoczny.*/
    animation: fprint-linia 4s linear infinite;
}
@keyframes fprint-linia{
    0%, 100%{
        top: 0%;
    }
    50%{
        top: 100%;
    }
}
.panele .panel .scan h3{
    color: #69f;
    font-size: 1.25rem;
    margin-top: 20px;
    text-transform: uppercase;
    filter: drop-shadow(0 0 20px #69f) drop-shadow(0 0 60px #69f);
    font-family: consolas;/*Użycie czcionki wykorzystywanej przez system w konsoli lub terminalu*/
    animation: fprint-tekst 1s steps(1) infinite;
}
@keyframes fprint-tekst{/*Miganie tekstu osiągnięte za pomocą widoczności elementu - od całkowitej przezroczystości, do całkowitej widoczności*/
    0%, 100%{
        opacity: 0;
    }
    50%{
        opacity: 1;
    }
}
.panele .panel.obrotowy{
    position: relative;
}
.panele .panel.obrotowy .face{/*wspólna klasa dla obu elementów*/
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: 0.7s;
}
.panele .panel.obrotowy .face.face1{/*klasa dla pierwszego elementu, widocznego na początku*/
    background: #69f;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap:20px;
    color: #fff;
    z-index: 1;
    transform-origin: bottom;/*wszelkie transformacje następują względem dolnej krawędzi tego elementu*/
}
.panele .panel.obrotowy .face.face1 i{
    font-size: 3rem;
    text-align: center;
    display: block;
}
.panele .panel.obrotowy .face.face1 h3{
    font-size: 2rem;
    font-weight: 300;
}
.panele .panel.obrotowy:hover .face.face1{
    transform: translateY(-100%) rotateX(90deg);/*transformacja obejmuje przesunięcie w pionie 0 100% do góry oraz obrócenie elemetu o 90 stopni, przez co staje się on niewidoczny*/
    background: #c00;
}
.panele .panel.obrotowy .face.face2{/*klasa dla drugiego elementu, ukrytego na początku*/
    padding: 10px;
    transform: translateY(100%) rotateX(90deg);/*element początkowo jest przesunięty w dół o 100% i obrócony o 90 stopni przez co staje się niewidoczny*/
    transform-origin: top;/*wszelkie transformacje następują względem górnej krewędzi elementu*/
}
.panele .panel.obrotowy:hover .face.face2{
    transform: translateY(0) rotateX(0);/*aby element się wyświetlił ustawić należy mu warości początkowe, więc nie będzie ani przesunięty, ani obrócony*/
}
.galeria{
    display: flex;
    justify-content: center;
    align-items: center;
}
.galeria .siatka{
    padding: 40px;
    position: relative;
    display: grid;/*wyświetlenie elementu jako siatka*/
    width: 1280px;
    grid-template-columns: 1fr 1fr 1fr 1fr;/*definiuje ilość kolumn oraz ich szerokość. Zastosowanie 1fr określa, że wszystkie kolumny mają być tej samej szerokości*/
    grid-template-rows: 280px 280px 280px 280px;/*definiuje ilość wierszy oraz ich wysokość. Jeśli elementów będzie więcej i nie zmieszczą się, przeglądarka wygeneruje automatycznie kolejny wiersz korzystając z wzorca podanych wysokości, czyli rozpoczynając od pierwszej napotkanej wartości i przechodząc do kolejnych w kolejnych wygenerowanych wierszach*/
    grid-template-areas: "img1 img2 img2 img3"
                          "img1 img4 img5 img5"
                          "img6 img7 img7 img8"
                          "img9 img9 img10 img8";
                          /*określenie nazw pól siatki, odnoszące się do grid-name zdefiniowanych dla klas niżej*/
    grid-gap: 10px;
}
.galeria .siatka .item{
    position: relative;
    border: 1px solid #ccc;
}
.galeria .siatka .item img{
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    object-fit: cover;/*pozwala na wypełnienie obszaru elementu wyżej w całości zdjęciem, odnosząc się do jego dłuższego rozmiaru*/
    filter: grayscale(1) blur(3px);/*włączenie trybu czarno-białego i ustawienie rozmycia*/
    opacity: 0.5;/*ustawienie przezroczystości na 50%*/
    transition: 0.7s;
}
.galeria .siatka .item img:hover{
    filter: grayscale(0) blur(0);/*wyłączenie trybu czarno-białego i ustawienie rozmycia*/
    opacity: 1;/*ustawienie pełnego krycia*/
}
.galeria .siatka .img1{
    grid-area: img1;/*zdefiniowanie nazwy obszaru siatki, w którym będzie się wyświetlał element posiadający tę klasę*/
}
.galeria .siatka .img2{
    grid-area: img2;
}
.galeria .siatka .img3{
    grid-area: img3;
}
.galeria .siatka .img4{
    grid-area: img4;
}
.galeria .siatka .img5{
    grid-area: img5;
}
.galeria .siatka .img6{
    grid-area: img6;
}
.galeria .siatka .img7{
    grid-area: img7;
}
.galeria .siatka .img8{
    grid-area: img8;
}
.galeria .siatka .img9{
    grid-area: img9;
}
.galeria .siatka .img10{
    grid-area: img10;
}
.kontakt .mapa{
    flex:1;
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(100vh - var(--header-height));/*dla elementu mapy trzeba ustawić wysokość bloku na sztywno*/
}
.kontakt .mapa iframe{
    width:100%;
    height:90%;
    margin:15px;
    background:#fff;
    padding:5px;
}
.kontakt .formularz{
    flex:2;
    display: flex;
    justify-content: center;
    align-items: center;
}
.kontakt .formularz form{
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-direction: column;
    padding: 20px;
    gap: 15px;
    width: 100%;
}
.kontakt .formularz form input[type="text"],
.kontakt .formularz form input[type="email"],
.kontakt .formularz form input[type="tel"]{
    width: 100%;
    height: 48px;
    padding: 5px 10px;
    border-radius: 0;
    border: 1px solid #444;
}
.kontakt .formularz form fieldset{
    padding:20px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 15px;
}
.kontakt .formularz form fieldset legend{
    padding: 0 10px;
}
.kontakt .formularz form .wiersz{
    display: flex;
    width: 100%;
    gap: 15px;
    align-items: center;
}
.kontakt .formularz form .radio{
    flex-direction: row;
}
.kontakt .formularz form .radio .opcja{
    display: flex;
    gap: 15px;
    flex: 1;
    justify-content: center;
}
.kontakt .formularz form textarea{
    width: 100%;
    height: 250px;
    padding: 5px 10px;
    border-radius: 0;
    border: 1px solid #444;
    resize: vertical;
    min-height: 250px;
}
.kontakt .formularz form input[type="submit"]{
    width: 50%;
    background: #000;
    color: #fff;
    padding: 8px 10px;
    border: 0;
    transition: 0.7s;
    align-self: flex-end;
}
.kontakt .formularz form input[type="submit"]:hover{
    background: #c00;
}
.kontakt .formularz form input:focus,
.kontakt .formularz form textarea:focus{
    background: #000;
    color:#fff;
}
.kontakt .formularz form input[type="radio"],
.kontakt .formularz form input[type="checkbox"]{
    width: 30px;
    height: 30px;
}
#tak,#nie,#nie_wiem,#rodo{
    accent-color: #c00;
}
footer{
    display: flex;
    justify-content: space-around;
    align-items: center;
    min-height:300px;
    background:#000;
    padding:50px 120px;
    color:#fff;
}
footer a{
    color:#fff;
    transition: 0.7s;
}
footer a:hover{
    color: #c00;
}
footer .stopka{
    flex:1;
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-direction: column;
}
footer .stopka h3{
    margin-bottom: 20px;
    font-weight: 200;
}
footer .stopka img{
    filter: invert(100);/*odwrócenie koloru na kolor przeciwny w skali kolorów*/
    width:180px;
    height: auto;
    margin-bottom: 20px;
}
footer .stopka ul{
    list-style-type: none;
}
footer .stopka ul li{
   margin-bottom: 10px;
}
footer .stopka ul li a{
    text-decoration: none;
}
footer .stopka .zapis{
    display: flex;
    flex-direction: column;
    gap: 15px;
}
footer .stopka .zapis input[type="email"]{
    background: none;
    height: 48px;
    padding: 5px 10px;
    border: 1px solid #fff;
    border-radius: 0;
    color: #fff;
}
footer .stopka .zapis input[type="email"]:focus{
    background: #fff;
    color: #000;
}
footer .stopka .zapis input[type="checkbox"]{
    width: 30px;
    height: 30px;
}
footer .wiersz{
    display: flex;
    width: 100%;
    gap: 15px;
    align-items: center;
}
footer .stopka .zapis a{
    border: 1px solid #fff;
    padding: 8px 20px;
    width: 50%;
    text-align: center;
    align-self: flex-end;
    transition: 0.7s;
    text-decoration: none;
}
footer .stopka .zapis a:hover{
    background: #fff;
    color: #000;
}
/*guzik do szybkiego kontaktu*/
.zadzwon{
    width: 80px;
    height: 80px;
    background:rgb(0, 100, 0);
    border-radius: 50%;
    font-size: 2.25rem;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 999;/*ustawiamy element na jakiejś wartwie o względnie dużym numerze, aby element zawsze wyświetlał się na górze*/
    position: fixed;/*przyklejenie w pewnym miejscu okna przeglądarki względem całego elementu body*/
    bottom: 20px;/*20px od dołu okna przeglądarki*/
    left: 20px;/*i 20px od lewej krawędzi okna przeglądadrki*/
    animation: pulsowanie 2s infinite;/*dodaje animację pulsowania. animacja obracania elementu pochodzi z font awesome*/
}
@keyframes pulsowanie{
    0%{
        transform: scale(0.95);/*pomniejszenie do 95%*/
        box-shadow: 0 0 0 0 rgba(0,100,0,0.7);/*dodanie cienia z kryciem 70%*/
    }
    70%{
        transform: scale(1);/*wielkość oryginalna*/
        box-shadow: 0 0 0 12px rgba(0,100,0,0);/*cień z rozmyciem na 10px i pełną przezroczystością*/
    }
    100%{
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(0,100,0,0);
    }
}
.zadzwon a{
    color:#fff;
}
.full{
    min-height: calc(100vh - var(--header-height));
    /*minimalna wysokość bloku z tą klasą jest obliczana przez przeglądarkę. 100vh (viewport height) to 100% wysokości ekranu urządzenia i od tego jest odejmowana wysokość headera, zdefiniowana w grupie root.*/
    scroll-margin-top:var(--header-height);
    /*ustawia margines początkowy sekcji uwzględniając wysokość sekcji header, aby zawartość sekcji nie chowała się pod nagłówkiem*/
    display: flex;
    justify-content: center;
    align-items: center;
}
.kratka{
    width: 300px;
    height: 150px;
    background: yellow;
    padding: 20px;
}
/*Dark mode przełącznik*/
.tryb label{
    position: relative;
    display: flex;
    justify-content: space-between;
    gap: 8px;
}
.tryb label span{
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}
.tryb label .action{
    position: relative;
}
.tryb label .action input{
    appearance: none;
}
.tryb label .action input:checked ~ i{
    background: #69f;
}
.tryb label .action i{
    position: relative;
    width: 40px;
    height: 20px;
    background: #aaa;
    border-radius: 15px;
    transition: 0.7s;
}
.tryb label .action i::before{
    content: '';
    position: absolute;
    top:2.5px;
    left:2.5px;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #fff;
    transition: 0.7s;
}
.tryb label .action input:checked ~ i::before{
    left: calc(100% - 17.5px);
}
/*style dla trybu ciemnego*/
    .darkMode{
        background: #000;
    }
    .darkMode p,
    .darkMode h1,
    .darkMode h2,
    .darkMode h3,
    .darkMode label,
    .darkMode legend{
        color:#fff;
    }
    .darkMode header{
        background: #000;
    }
    .darkMode header .logo img{
        filter: invert(100%);
    }
    .darkMode header .menu ul li a{
        color:#fff;
    }
    .darkMode header .socialki a{
        color: #fff;
    }
    .darkMode .opis .tekst h1::after{
        background: #fff;
    }
    .darkMode .kontakt .formularz form input[type="submit"]{
        background: #fff;
        color: #000;
    }
    /*wywoływacz menu mobilnego*/
    .checkbtn{
        font-size: 2rem;
        margin-right: 20px;
        margin-left: 10px;
        cursor: pointer;
        order: 5;
        display: none;
    }
    #check{
        display: none;
    }
    @media (max-width:991px){
        .checkbtn{
            display: block;
        }
        header .menu{
            width: 100%;
            position: absolute;
            top: var(--header-height);
            left:-100%;
            height: calc(100vh - var(--header-height));
            transition: 0.7s;
        }
        #check:checked ~ .menu{
            left:0;
        }
        header .menu ul{
            flex-direction: column;
            background: #222;
        }
        header .menu ul a{
            color:#fff;
        }
        .opis,.kontakt{
            flex-direction: column;
            gap:25px;
            padding:25px 0;
        }
        .opis .tekst p{
            column-count: 1;
        }
        .panele{
            display: block;
        }
        .panele .panel{
            margin-bottom: 20px;
            width: 100%;
        }
        .galeria .siatka{
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 280px;
            grid-auto-rows: 280px;
            grid-template-areas: "img1 img2"
                                 "img3 img4"
                                 "img5 img6"
                                 "img7 img8"
                                 "img9 img10";
        }
        .kontakt .mapa iframe{
            width: 100%;
            height: 450px;
        }
        footer{
            flex-direction: column;
            gap:20px;
        }
    }